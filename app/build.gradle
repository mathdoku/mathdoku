// This gradle build file relies on extra properties which are defined in the gradle build file for the overall project.

apply plugin: 'android'
apply plugin: 'android-test'

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

	defaultConfig {
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main/java']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // The instrumentTest of Android Studio will be used to run unit tests with Robolectric
        // in a Java VM. To ensure that 1) the unit test are executed and 2) source code completion
        // and navigation for unit tests in Android Studio works properly the following is done:
        //   a) Move instrumentTest Root to other location. Note: the unit tests won't run when
        //      invoking gradle check as long as they are strored in the default instrumentTest
        //      directory.
        //   b) Add dependencies for unit testing, mocking, robolectric etc. See dependencies
        //      section.
        instrumentTest.setRoot('src/test')
    }

	applicationVariants.all { variant ->
        variant.mergeResources.doFirst {
            println "Copy templates from './src-templates/${variant.name}' to source dir."

            copy {
                from "./src-templates/${variant.name}"
                into '.'
                include '**/*'
            }

            println "Copy assets from './src/test/res' to '.build/assets/${variant.name}'."

            copy {
                from "./src/test/res"
                into "./build/assets/${variant.name}"
            }
        }
    }
}


// Base Config for a local sonar installation
// To use: gradle sonarRunner
// Pre-requisites: gradle clean assemble :app:installDebug
apply plugin: 'sonar-runner'
sonarRunner {
    sonarProperties {
        property 'sonar.projectName', 'MathDoku Plus'
        property 'sonar.projectKey', 'net.mathdoku.plus'
        property 'sonar.projectVersion', '595'
        property 'sonar.host.url', 'http://localhost:9000'
        property 'sonar.jdbc.url', 'jdbc:h2:tcp://localhost:9092/sonar'
        property 'sonar.jdbc.driverClassName', 'org.h2.Driver'
        property 'sonar.jdbc.username', 'sonar'
        property 'sonar.jdbc.password', 'sonar'
        property 'sonar.branch', 'gradle'
        property 'sonar.dynamicAnalysis', 'reuseReports'
        properties['sonar.sources'] = android.sourceSets.main.java.srcDirs
        properties['sonar.tests'] = android.sourceSets.instrumentTest.java.srcDirs
        properties['sonar.binaries'] = file('build/classes/debug')
        property 'sonar.surefire.reportsPath','build/instrumentTest-results/connected/'
    }
}

dependencies {
    compile "com.google.android.gms:play-services:${googlePlayServicesVersion}"
    compile "com.android.support:support-v4:${androidSupportV4Version}"
    compile "com.android.support:appcompat-v7:${androidAppCompatV7Version}"
    compile files("libs/achartengine-${aChartEngineVersion}.jar")
    compile files("libs/annotations.jar")

    // Dependencies for executing the unit tests. These should be kept in sync with the
    // dependencies for task instrumentTestCompile.
    testCompile "junit:junit:${jUnitVersion}", "org.mockito:mockito-core:${mockitoCoreVersion}"
    testCompile "org.robolectric:robolectric:${robolectricVersion}"
    testCompile "com.squareup:fest-android:${festAndroidVersion}"

    // The instrumentTest of Android Studio will be used to run unit tests with Robolectric
    // in a Java VM. To ensure that 1) the unit test are executed and 2) source code completion
    // and navigation for unit tests in Android Studio works properly the following is done:
    //   a) Move instrumentTest Root to other location. Note: the unit tests won't run when
    //      invoking gradle check as long as they are strored in the default instrumentTest
    //      directory.
    //   b) Add dependencies for unit testing, mocking, robolectric etc. See dependencies
    //      section.
    // The dependencies below should be kept in sync with the dependencies for task testCompile.
    instrumentTestCompile "junit:junit:${jUnitVersion}", "org.mockito:mockito-core:${mockitoCoreVersion}"
    instrumentTestCompile "org.robolectric:robolectric:${robolectricVersion}"
    instrumentTestCompile "com.squareup:fest-android:${festAndroidVersion}"
}