// This gradle build file relies on extra properties which are defined in the gradle build file for the overall project.

apply plugin: 'com.android.application'

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

	defaultConfig {
        applicationId appVersionPackage
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode appVersion
        versionName appVersionName
    }

	applicationVariants.all { variant ->
        variant.mergeResources.doFirst {
            println "Copy templates from './src-templates/${variant.name}' to source dir."

            copy {
                from "./src-templates/${variant.name}"
                into '.'
                include '**/*'
            }
        }
    }
}

// Base Config for a local sonar installation
// To use: gradle sonarRunner
// Pre-requisites: gradle clean assemble :app:installDebug
apply plugin: 'sonar-runner'
sonarRunner {
    sonarProperties {
        property 'sonar.projectName', 'MathDoku Plus'
        property 'sonar.projectKey', 'net.mathdoku.plus'
        property 'sonar.projectVersion', '595'
        property 'sonar.host.url', 'http://localhost:9000'
        property 'sonar.jdbc.url', 'jdbc:h2:tcp://localhost:9092/sonar'
        property 'sonar.jdbc.driverClassName', 'org.h2.Driver'
        property 'sonar.jdbc.username', 'sonar'
        property 'sonar.jdbc.password', 'sonar'
        property 'sonar.branch', 'gradle'
        property 'sonar.dynamicAnalysis', 'reuseReports'
        property 'sonar.surefire.reportsPath','build/instrumentTest-results/connected/'
        property "sonar.language", "java"
        property "sonar.sources", "src/main/java" // Do not analyze the unit tests because of too many false positives
        property "sonar.binaries", "build"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.google.android.gms:play-services:${googlePlayServicesVersion}"
    compile files("libs/achartengine-${aChartEngineVersion}.jar")
    compile files("libs/annotations.jar")

    // Robolectric
    testCompile "junit:junit:4.12"
    testCompile  "org.mockito:mockito-core:1.9.5+"
    testCompile 'org.hamcrest:hamcrest-core:1.1'
    testCompile 'org.hamcrest:hamcrest-library:1.1'
    testCompile 'org.hamcrest:hamcrest-integration:1.1'
    testCompile "org.robolectric:robolectric:${robolectricVersion}"
}