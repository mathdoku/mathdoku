<?xml version="1.0" encoding="UTF-8"?>
<project
    name="PuzzleFragmentActivity"
    default="help" >

    <!-- The local.properties file is created and updated by the 'android' tool. -->
    <!-- It contains the path to the SDK. It should *NOT* be checked into -->
    <!-- Version Control Systems. -->

    <property file="local.properties" />

    <!-- The ant.properties file can be created by you. It is only edited by the -->
    <!-- 'android' tool to add properties to it. -->
    <!-- This is the place to change some Ant specific build properties. -->
    <!-- Here are some properties you may want to change/update: -->
    <!-- - - - - -->
    <!-- source.dir -->
    <!-- The name of the source directory. Default is 'src'. -->
    <!-- out.dir -->
    <!-- The name of the output directory. Default is 'bin'. -->
    <!-- - - - - -->
    <!-- For other overridable properties, look at the beginning of the rules -->
    <!-- files in the SDK, at tools/ant/build.xml -->
    <!-- - - - - -->
    <!-- Properties related to the SDK location or the project target should -->
    <!-- be updated using the 'android' tool with the 'update' action. -->

    <property file="ant.properties" />

    <!-- if sdk.dir was not set from one of the property file, then -->
    <!-- get it from the ANDROID_HOME env var. -->
    <!-- This must be done before we load project.properties since -->
    <!-- the proguard config can use sdk.dir -->

    <property environment="env" />

    <condition
        property="sdk.dir"
        value="${env.ANDROID_HOME}" >

        <isset property="env.ANDROID_HOME" />
    </condition>

    <!-- The project.properties file is created and updated by the 'android' -->
    <!-- tool, as well as ADT. -->
    <!-- - - - - -->
    <!-- This contains project specific properties such as project target, and library -->
    <!-- dependencies. Lower level build properties are stored in ant.properties -->
    <!-- (or in .classpath for Eclipse projects). -->

    <loadproperties srcFile="project.properties" />

    <!-- quick check on sdk.dir -->

    <fail
        message="sdk.dir is missing. Make sure to generate local.properties using &apos;android update project&apos; or to inject it through the ANDROID_HOME environment variable."
        unless="sdk.dir" />

    <!-- Import per project custom build rules if present at the root of the project. -->
    <!-- This is the place to put custom intermediary targets such as: -->
    <!-- -pre-build -->
    <!-- -pre-compile -->
    <!-- -post-compile (This is typically used for code obfuscation. -->
    <!-- Compiled code location: ${out.classes.absolute.dir} -->
    <!-- If this is not done in place, override ${out.dex.input.absolute.dir}) -->
    <!-- -post-package -->
    <!-- -post-build -->
    <!-- -pre-clean -->

    <import
        file="custom_rules.xml"
        optional="true" />

    <!-- Alterations to the default ant build are defined below. These must be defined before -->
    <!-- import of the default build.xml. -->

    <target name="-pre-build" >

        <if>

            <condition>

                <and>

                    <equals
                        arg1="${build.target}"
                        arg2="release" />

                    <not>

                        <equals
                            arg1="${config.app_mode}"
                            arg2="AppMode.PRODUCTION" />
                    </not>
                </and>
            </condition>

            <then>

                <fail message="Cannot release to production when config.app_mode = &apos;${config.app_mode}&apos;." />
            </then>
        </if>
    </target>

    <target name="-pre-compile" >

        <!-- Copy all files from the ant-templates folder dependent on which build command is runned. -->

        <copy
            overwrite="true"
            todir="." >

            <fileset dir="./ANT-templates/${build.target}" />
        </copy>

        <!-- Copy all files from the ant-templates folder regardless of which build command is runned. -->

        <copy
            overwrite="true"
            todir="." >

            <fileset dir="./ANT-templates/all" />
        </copy>

        <!-- Replace tokens in specificx template files. -->

        <replace
            file="${source.dir}/net/mathdoku/plus/config/Config.java"
            summary="yes"
            token="@CONFIG.APP_MODE@"
            value="${config.app_mode}" />
    </target>

    <!-- As the default build has been modified above, it is necessary to set the version-tag -->
    <!-- below to value 'custom' instead of an integer. In this way the file is not overwritten -->
    <!-- by tools such as "android update project" -->
    <!-- version-tag: custom -->

    <import file="${sdk.dir}/tools/ant/build.xml" />

</project>