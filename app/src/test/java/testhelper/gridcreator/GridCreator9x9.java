package testhelper.gridcreator;

import net.mathdoku.plus.enums.CageOperator;
import net.mathdoku.plus.enums.GridType;
import net.mathdoku.plus.enums.PuzzleComplexity;
import net.mathdoku.plus.puzzle.grid.Grid;

/**
 * The test grid in this class has been generated with the specified generator version of the app. In case the grid is
 * recreated with the same grid generating parameters as specified by this class, the result should be equal to the grid
 * itself.
 * <p/>
 * All data in the methods below should be kept in sync with the specified version of the generator.
 * <p/>
 * As the data below was generated with hidden operators, this grid can be used with visible and with hidden operator as
 * well.
 */
public class GridCreator9x9 extends GridCreator {
    public static GridCreator9x9 create() {
        return new GridCreator9x9();
    }

    public static GridCreator9x9 createEmpty() {
        GridCreator9x9 gridCreator = new GridCreator9x9();
        gridCreator.setEmptyGrid();
        return gridCreator;
    }

    public static Grid createEmptyGrid() {
        return createEmpty().getGrid();
    }

    protected GridCreator9x9() {
        super();
    }

    /**
     * This code is generated based on a grid which is generated by the app. To generate the code, use the app in
     * Development Mode. Choose menu option Development Options -> Generate code for test helper.
     * <p/>
     * DO NOT REMOVE THIS TEXT.
     */
    @Override
    protected long getGameSeed() {
        return -7199680227757886318L;
    }

    protected GridType getGridType() {
        return GridType.GRID_9X9;
    }

    protected boolean getHideOperator() {
        return false;
    }

    protected PuzzleComplexity getPuzzleComplexity() {
        return PuzzleComplexity.EASY;
    }

    protected int getGeneratorVersionNumber() {
        return 598;
    }

    protected int getMaxCageResult() {
        return 648;
    }

    protected int getMaxCageSize() {
        return 3;
    }

    protected int[] getCorrectValuePerCell() {
        return new int[]{
                // Row 0
                1, 5, 9, 4, 3, 7, 6, 8, 2,
                // Row 1
                7, 2, 5, 1, 6, 9, 4, 3, 8,
                // Row 2
                6, 8, 3, 5, 7, 1, 9, 2, 4,
                // Row 3
                4, 3, 6, 8, 9, 2, 5, 1, 7,
                // Row 4
                9, 4, 1, 7, 2, 8, 3, 6, 5,
                // Row 5
                3, 9, 7, 6, 8, 4, 2, 5, 1,
                // Row 6
                8, 1, 2, 3, 5, 6, 7, 4, 9,
                // Row 7
                5, 7, 4, 2, 1, 3, 8, 9, 6,
                // Row 8
                2, 6, 8, 9, 4, 5, 1, 7, 3,};
    }

    protected int[] getCageIdPerCell() {
        return new int[]{
                // Row 0
                0, 0, 1, 1, 2, 3, 4, 4, 5,
                // Row 1
                6, 6, 1, 7, 2, 3, 8, 5, 5,
                // Row 2
                9, 9, 10, 7, 11, 3, 8, 8, 12,
                // Row 3
                13, 13, 10, 11, 11, 14, 14, 15, 12,
                // Row 4
                16, 13, 17, 17, 18, 19, 20, 15, 21,
                // Row 5
                16, 22, 17, 18, 18, 19, 20, 23, 21,
                // Row 6
                16, 22, 24, 24, 25, 26, 27, 23, 28,
                // Row 7
                29, 29, 24, 30, 25, 26, 27, 31, 28,
                // Row 8
                32, 32, 30, 30, 33, 26, 34, 31, 35,};
    }

    protected int[] getResultPerCage() {
        return new int[]{
                // Cage 0
                4,
                // Cage 1
                180,
                // Cage 2
                3,
                // Cage 3
                63,
                // Cage 4
                48,
                // Cage 5
                48,
                // Cage 6
                5,
                // Cage 7
                5,
                // Cage 8
                72,
                // Cage 9
                14,
                // Cage 10
                18,
                // Cage 11
                504,
                // Cage 12
                11,
                // Cage 13
                48,
                // Cage 14
                3,
                // Cage 15
                5,
                // Cage 16
                216,
                // Cage 17
                49,
                // Cage 18
                96,
                // Cage 19
                2,
                // Cage 20
                1,
                // Cage 21
                4,
                // Cage 22
                9,
                // Cage 23
                1,
                // Cage 24
                24,
                // Cage 25
                5,
                // Cage 26
                90,
                // Cage 27
                1,
                // Cage 28
                15,
                // Cage 29
                12,
                // Cage 30
                144,
                // Cage 31
                2,
                // Cage 32
                4,
                // Cage 33
                4,
                // Cage 34
                1,
                // Cage 35
                3,};
    }

    protected CageOperator[] getCageOperatorPerCage() {
        return new CageOperator[]{
                // Cage 0
                CageOperator.SUBTRACT,
                // Cage 1
                CageOperator.MULTIPLY,
                // Cage 2
                CageOperator.SUBTRACT,
                // Cage 3
                CageOperator.MULTIPLY,
                // Cage 4
                CageOperator.MULTIPLY,
                // Cage 5
                CageOperator.MULTIPLY,
                // Cage 6
                CageOperator.SUBTRACT,
                // Cage 7
                CageOperator.MULTIPLY,
                // Cage 8
                CageOperator.MULTIPLY,
                // Cage 9
                CageOperator.ADD,
                // Cage 10
                CageOperator.MULTIPLY,
                // Cage 11
                CageOperator.MULTIPLY,
                // Cage 12
                CageOperator.ADD,
                // Cage 13
                CageOperator.MULTIPLY,
                // Cage 14
                CageOperator.SUBTRACT,
                // Cage 15
                CageOperator.SUBTRACT,
                // Cage 16
                CageOperator.MULTIPLY,
                // Cage 17
                CageOperator.MULTIPLY,
                // Cage 18
                CageOperator.MULTIPLY,
                // Cage 19
                CageOperator.DIVIDE,
                // Cage 20
                CageOperator.SUBTRACT,
                // Cage 21
                CageOperator.SUBTRACT,
                // Cage 22
                CageOperator.DIVIDE,
                // Cage 23
                CageOperator.SUBTRACT,
                // Cage 24
                CageOperator.MULTIPLY,
                // Cage 25
                CageOperator.DIVIDE,
                // Cage 26
                CageOperator.MULTIPLY,
                // Cage 27
                CageOperator.SUBTRACT,
                // Cage 28
                CageOperator.ADD,
                // Cage 29
                CageOperator.ADD,
                // Cage 30
                CageOperator.MULTIPLY,
                // Cage 31
                CageOperator.SUBTRACT,
                // Cage 32
                CageOperator.SUBTRACT,
                // Cage 33
                CageOperator.NONE,
                // Cage 34
                CageOperator.NONE,
                // Cage 35
                CageOperator.NONE,};
    }

    @Override
    public String getGridDefinition() {
        return new StringBuilder() //
                // PuzzleComplexity id
                .append("2").append(FIELD_SEPARATOR_GRID_DEFINITION_PART)
                        // Cage ids for cells on row 0
                .append("000001010203040405")
                        // Cage ids for cells on row 1
                .append("060601070203080505")
                        // Cage ids for cells on row 2
                .append("090910071103080812")
                        // Cage ids for cells on row 3
                .append("131310111114141512")
                        // Cage ids for cells on row 4
                .append("161317171819201521")
                        // Cage ids for cells on row 5
                .append("162217181819202321")
                        // Cage ids for cells on row 6
                .append("162224242526272328")
                        // Cage ids for cells on row 7
                .append("292924302526273128")
                        // Cage ids for cells on row 8
                .append("323230303326343135")
                        // Definition for cage id 0
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("0,4,2")
                        // Definition for cage id 1
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("1,180,3")
                        // Definition for cage id 2
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("2,3,2")
                        // Definition for cage id 3
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("3,63,3")
                        // Definition for cage id 4
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("4,48,3")
                        // Definition for cage id 5
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("5,48,3")
                        // Definition for cage id 6
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("6,5,2")
                        // Definition for cage id 7
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("7,5,3")
                        // Definition for cage id 8
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("8,72,3")
                        // Definition for cage id 9
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("9,14,1")
                        // Definition for cage id 10
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("10,18,3")
                        // Definition for cage id 11
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("11,504,3")
                        // Definition for cage id 12
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("12,11,1")
                        // Definition for cage id 13
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("13,48,3")
                        // Definition for cage id 14
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("14,3,2")
                        // Definition for cage id 15
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("15,5,2")
                        // Definition for cage id 16
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("16,216,3")
                        // Definition for cage id 17
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("17,49,3")
                        // Definition for cage id 18
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("18,96,3")
                        // Definition for cage id 19
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("19,2,4")
                        // Definition for cage id 20
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("20,1,2")
                        // Definition for cage id 21
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("21,4,2")
                        // Definition for cage id 22
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("22,9,4")
                        // Definition for cage id 23
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("23,1,2")
                        // Definition for cage id 24
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("24,24,3")
                        // Definition for cage id 25
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("25,5,4")
                        // Definition for cage id 26
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("26,90,3")
                        // Definition for cage id 27
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("27,1,2")
                        // Definition for cage id 28
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("28,15,1")
                        // Definition for cage id 29
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("29,12,1")
                        // Definition for cage id 30
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("30,144,3")
                        // Definition for cage id 31
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("31,2,2")
                        // Definition for cage id 32
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("32,4,2")
                        // Definition for cage id 33
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("33,4,0")
                        // Definition for cage id 34
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART).append("34,1,0")
                        // Definition for cage id 35
                .append(FIELD_SEPARATOR_GRID_DEFINITION_PART)
                .append("35,3,0")
                .toString();
    }
}
