package net.mathdoku.plus.ui;

import net.mathdoku.plus.R;
import net.mathdoku.plus.leaderboard.Leaderboard;
import net.mathdoku.plus.painter.Painter;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;

/**
 * This fragment is used to explain that the user has to log in in order to be
 * able to view the leaderboard and to submit own high scores. The fragment also
 * allows to sign in and sign out of Google+.
 */
public class SignInFragment extends android.support.v4.app.Fragment implements
		OnClickListener {
	public final static String TAG = "MathDoku.SignInFragment";

	// References to the UI elements
	LinearLayout mLinearLayoutSignIn;
	LinearLayout mLinearLayoutSignedIn;
	com.google.android.gms.common.SignInButton mSignInButton;
	Button mSignOutButton;
	Button mShowLeaderboardButton;
	TextView mSignedInAs;

	// The leaderboard
	private Leaderboard mLeaderboard;

	// Interface for listener on this fragment
	public interface Listener {
		public void onSignInButtonClicked();

		public void onSignOutButtonClicked();

		public void onShowLeaderboardButtonClicked();
	}

	Listener mListener;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View rootView = inflater.inflate(R.layout.sign_in_fragment, container,
				false);

		mLinearLayoutSignIn = (LinearLayout) rootView
				.findViewById(R.id.google_play_services_sign_in_layout);
		mLinearLayoutSignedIn = (LinearLayout) rootView
				.findViewById(R.id.google_play_services_signed_in_layout);

		mSignInButton = (com.google.android.gms.common.SignInButton) rootView
				.findViewById(R.id.sign_in_button);
		mSignInButton.setOnClickListener(this);

		mSignOutButton = (Button) rootView.findViewById(R.id.sign_out_button);
		mSignOutButton.setOnClickListener(this);

		mShowLeaderboardButton = (Button) rootView
				.findViewById(R.id.show_leaderboards_button);
		mShowLeaderboardButton.setBackgroundColor(Painter.getInstance()
				.getButtonBackgroundColor());
		mShowLeaderboardButton.setOnClickListener(this);

		mSignedInAs = (TextView) rootView
				.findViewById(R.id.google_play_services_signed_in_as);

		setSignedOut();

		return rootView;
	}

	/**
	 * Sets a listener for the events generated by this fragment.
	 * 
	 * @param listener
	 *            The listener to which the events have to be sent.
	 */
	public void setListener(Listener listener) {
		mListener = listener;
	}

	/**
	 * Informs the fragment about a successful login on Google+.
	 * 
	 * @param leaderboard
	 *            The leaderboard associated with the login on Google+.
	 */
	public void setSignedIn(Leaderboard leaderboard) {
		mLeaderboard = leaderboard;
		if (mLeaderboard != null && mLeaderboard.isSignedIn()) {
			// Hide the sign in layout as the user is already signed in
			mLinearLayoutSignIn.setVisibility(View.GONE);

			// Initialize the signed in layout
			mLinearLayoutSignedIn.setVisibility(View.VISIBLE);
			mShowLeaderboardButton.setOnClickListener(this);
			mSignedInAs.setText(getResources().getString(
					R.string.google_play_services_signed_in,
					mLeaderboard.getPlayerName()));

			mShowLeaderboardButton.setVisibility(View.VISIBLE);
		}
	}

	/**
	 * Informs the fragment about a logout of Google+.
	 */
	public void setSignedOut() {
		mLeaderboard = null;

		// Hide the signed in layout as the user has just logged out
		mLinearLayoutSignedIn.setVisibility(View.GONE);
		mShowLeaderboardButton.setVisibility(View.GONE);

		// Initialized the sign in layout
		mLinearLayoutSignIn.setVisibility(View.VISIBLE);
	}

	@Override
	public void onClick(View view) {
		if (mListener == null) {
			return;
		}

		switch (view.getId()) {
		case R.id.sign_in_button:
			mListener.onSignInButtonClicked();
			break;
		case R.id.sign_out_button:
			mListener.onSignOutButtonClicked();
			setSignedOut();
			break;
		case R.id.show_leaderboards_button:
			mListener.onShowLeaderboardButtonClicked();
			break;
		}
	}
}